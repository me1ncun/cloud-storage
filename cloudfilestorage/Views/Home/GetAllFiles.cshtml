@model IndexViewModel
@{
    ViewData["Title"] = "All files";
}
@if (Model != null && Model.AllFiles.S3Objects.Count > 0)
{    
    @await Html.PartialAsync("CreateButtons")
    <div style="border-radius: 8px; padding: 10px;" class="flex-box border box-shadow">
        <div class="flex-container">
            @foreach (var itemsInsideDirectory in Model.AllFiles.S3Objects)
            {
                <div class="dropdown">
                    <div class="item">
                        @if (itemsInsideDirectory.Key.LastIndexOf("/") == itemsInsideDirectory.Key.Length - 1)
                        {
                            <section style="display: flex; align-items: center;" class="flex-column">
                                <img class="files-image" src="images/folders.png" />
                                @{
                                    var lastIndex = itemsInsideDirectory.Key.LastIndexOf("/");
                                    var underLastIndex = itemsInsideDirectory.Key.LastIndexOf("/", lastIndex - 1);
                                    var folderName = itemsInsideDirectory.Key.Remove(0, underLastIndex + 1).Replace("/", "");
                                }
                                <div>@folderName</div>
                            </section>
                        }
                        else
                        {
                            <section style="display: flex; align-items: center;" class="flex-column">
                            <img class="files-image" src="images/file.png"/>
                                @{
                                var index = itemsInsideDirectory.Key.LastIndexOf("/");
                                var fileName = @itemsInsideDirectory.Key.Remove(0, index+1);
                                }
                                <div>@fileName</div>
                            </section>
                        }
                    </div>
                    <div class="dropdown-content">
                        @if (@itemsInsideDirectory.Key[@itemsInsideDirectory.Key.Length-1].Equals('/'))
                        {
                            <form method="post" asp-action="TransportFolderName" asp-controller="File">
                                <input type="hidden" name="folderName" value="@itemsInsideDirectory.Key"/>
                                <button style="border: none;" type="submit">Open</button>
                            </form>
                            <form method="post" asp-action="RenameBucket" asp-controller="File">
                                <button style="border: none; color: red;" class="renameButton" type="button" onclick="showRenameInput(this)">Rename</button>
                                <input type="hidden" name="oldName" value="@itemsInsideDirectory.Key"/>
                                <input class="new-name" style="display: none;" type="text" placeholder="Enter new name" name="newName">
                                <input type="hidden" name="path" value="@Model.Path"/>
                                <button class="okButton" style="display: none; border: none;" type="submit">Ok</button>
                            </form>
                        }
                        @if (!@itemsInsideDirectory.Key[@itemsInsideDirectory.Key.Length-1].Equals('/'))
                        {
                            <form method="post" asp-action="FilePage" asp-controller="File">
                                <input type="hidden" name="fileName" value="@itemsInsideDirectory.Key"/>
                                <input type="hidden" name="fileSize" value="@itemsInsideDirectory.Size"/>
                                <input type="hidden" name="fileLastModified" value="@itemsInsideDirectory.LastModified"/>
                                <button style="border: none;" type="submit">Open</button>
                            </form>
                            <form method="post" asp-action="RenameObject" asp-controller="File">
                                <button style="border: none; color: red;" class="renameButton" type="button" onclick="showRenameInput(this)">Rename</button>
                                <input type="hidden" name="oldName" value="@itemsInsideDirectory.Key"/>
                                <input class="new-name" style="display: none;" type="text" placeholder="Enter new name" name="newName">
                                <input type="hidden" name="path" value="@Model.Path"/>
                                <button class="okButton" style="display: none; border: none;" type="submit">Ok</button>
                            </form>
                        }
                        <form method="post" asp-action="DeleteObject" asp-controller="File">
                            <input type="hidden" name="fileName" value="@itemsInsideDirectory.Key"/>
                            <button style="border: none;" type="submit">Delete</button>
                        </form>
                        <form method="post" asp-action="DownloadObject" asp-controller="File">
                            <input type="hidden" name="fileName" value="@itemsInsideDirectory.Key"/>
                            <button style="border: none;" type="submit">Download</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    @await Html.PartialAsync("CreateButtons")
    <div style="border-radius: 8px; padding: 10px;" class="flex-box border box-shadow">
    <h3>No files found</h3>
    </div>
}
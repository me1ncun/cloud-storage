version: '3.4'

networks:
  deploy-guide:
    driver: bridge
    
services:
  cloudfilestorage:
    image: cloudfilestorage
    container_name: cloudfilestorage
    build:
      context: .
      dockerfile: cloudfilestorage/Dockerfile
    ports:
      - "${SERVER_PORT}:8080"
      - "8081:8081"
    networks:
      - deploy-guide
    depends_on:
      - db
      - redis
    environment:
      - AWS_PROFILE=${AWS_PROFILE}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: ["dotnet", "ef", "database update"]
  
  db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - deploy-guide
    volumes:
      - db:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - deploy-guide

volumes:
    db: